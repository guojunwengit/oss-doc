import{_ as e,o as a,c as r,a as t}from"./app.ddc13804.js";const n={},h=t('<h1 id="为什么要用对象存储" tabindex="-1"><a class="header-anchor" href="#为什么要用对象存储" aria-hidden="true">#</a> 为什么要用对象存储</h1><h2 id="从数据的管理方式说起" tabindex="-1"><a class="header-anchor" href="#从数据的管理方式说起" aria-hidden="true">#</a> 从数据的管理方式说起</h2><p>对于网络文件系统来讲，数据是以一个个文件的形式来管理的，对于块存储来说，数据是以数据块的形式来管理的，每个数据块都有自己的地址，但是没有额外的背景信息，对象存储则是以对象的方式来管理数据，<strong>一个对象通常包含包含了3个部分</strong>：<strong>对象的数据、对象的元数据、一个全局唯一的标识符</strong></p><h2 id="对象存储的概念" tabindex="-1"><a class="header-anchor" href="#对象存储的概念" aria-hidden="true">#</a> 对象存储的概念</h2><p>对象存储也称为基于对象的存储，是一种将数据存储作为不同单元（称为对象）进行管理和操作的策略。这些对象保存在单个存储库中，不会与其他文件夹中的文件绑定到一起。相反，对象存储会将构成文件的数据片段合并到一起，将所有相关的元数据添加到该文件，并附加自定义标识符。</p><blockquote><p>对象存储会为文件添加全面的<strong>元数据</strong>，消除了文件存储中使用的分层文件结构；它将所有内容放置在一个称为存储池的扁平地址空间中。此元数据是对象存储成功的关键，因为它可以对存储池中数据的使用和功能进行深入分析。</p></blockquote><h2 id="对象存储和云存储的关系" tabindex="-1"><a class="header-anchor" href="#对象存储和云存储的关系" aria-hidden="true">#</a> 对象存储和云存储的关系</h2><p>对象存储是云存储的一部分，它提供了云存储的存储服务，云存储是建立在对象存储之上的之上的整体的解决方案，除了后端的存储服务之外，它还需要包括各种操作系统和平台上运行的客户端、身份认证、多种管理和监控功能。</p><h2 id="分布式存储的好处" tabindex="-1"><a class="header-anchor" href="#分布式存储的好处" aria-hidden="true">#</a> 分布式存储的好处</h2><p>传统的高端服务器性能强劲、成本高昂，一般只有大公司才来搭建私有存储，互联网生态下的云存储则用数量弥补质量，以大量低成本的普通PC服务器组成网络集群来提供服务。相比传统的高端服务器来说，同样价格下分布式存储提供的服务更好、性价比更高，且新节点的扩展以及坏旧节点的替换更为方便。</p><h2 id="访问数据的方式" tabindex="-1"><a class="header-anchor" href="#访问数据的方式" aria-hidden="true">#</a> 访问数据的方式</h2><p>网络文件系统的客户端通过NFS等网络协议访问某个远程服务器上存储的文件，块存储的客户端通过数据块地址访问SAN上的数据块，对象存储则通过REST网络服务访问对象。</p><p>REST是Representational State Transfer的简称，REST网络服务通过标准HTTP服务对网络资源提供一套预先定义的无状态的操作。对于REST和HTTP这里不做太多的阐述。</p>',13),d=[h];function i(s,o){return a(),r("div",null,d)}const p=e(n,[["render",i],["__file","index.html.vue"]]);export{p as default};
